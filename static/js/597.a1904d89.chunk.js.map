{"version":3,"file":"static/js/597.a1904d89.chunk.js","mappings":"yNAgCA,UA5Ba,WACT,IAAOA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,GAAKL,EAAL,CACA,IAAMM,EAAS,mCAAG,6GAESC,EAAAA,EAAAA,cAAwBP,GAFjC,OAERQ,EAFQ,OAGdJ,EAAYI,EAASC,KAAKC,MAHZ,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfN,GAToB,CAUvB,GAAE,CAACN,KAGA,wBACCG,GAAYA,EAASU,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,cAAeC,EAAnC,EAAmCA,UAAnC,OAAmD,2BACzE,gBAAKC,IAAKH,GAAY,0CAAuCA,GAAgBI,IAAKH,EAAgBI,MAAO,OACzG,wBAAKJ,KACL,0BAAI,cAAYC,OAHkEH,EAA5D,KAOjC,C,8DC5BKO,EAAW,+BAGXC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cANU,+NAUAC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC0BC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,sCAA2DC,GADrF,cACSd,EADT,yBAEUA,EAASC,KAAKoB,SAFxB,kEAKcC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFAC2BH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BU,EAA/B,mBAA0DT,GADrF,cACUd,EADV,yBAEWA,GAFX,kEAKewB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BD,GAA9B,uFACyBH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BU,EAA/B,2BAAkET,GAD3F,cACQd,EADR,yBAESA,GAFT,kEAKeyB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BF,GAA7B,uFACyBH,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BU,EAA/B,2BAAkET,GAD3F,cACQd,EADR,yBAESA,GAFT,kEAKe0B,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,uFACyBP,EAAAA,EAAAA,IAAA,UAAaP,EAAb,+BAA4Cc,GAASb,GAD9E,cACQd,EADR,yBAESA,GAFT,kEAKA,IAAM4B,EAAM,CAACT,cAjCb,WAQgBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyBYG,gBAzB3B,SAKcA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAoB8BE,cApB7C,SAKeA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAe6CC,aAf5D,SAKeA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAU2DC,cAV1E,SAKeA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAOf,K","sources":["components/Cast.jsx","moviesAPI.js"],"sourcesContent":["import {  useParams } from \"react-router-dom\";\nimport moviesAPI from '../moviesAPI';\nimport { useState, useEffect } from \"react\";\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [castList, setCastList] = useState([])\n\n    useEffect(()=> {\n        if (!movieId) return;\n        const fetchCast = async () => {\n            try {\n            const response = await moviesAPI.fetchCastInfo(movieId);\n            setCastList(response.data.cast);\n            } catch (error) {\n            console.log(error)\n            }\n        }\n        fetchCast();\n    }, [movieId])\n\n    return (\n        <ul>\n        {castList && castList.map(({id, profile_path, original_name, character}) => (<li key={id}>\n            <img src={profile_path && `https://image.tmdb.org/t/p/w500/${profile_path}`} alt={original_name}  width={100}/>\n            <h3>{original_name}</h3>\n            <h4>Character: {character}</h4>\n        </li>))}\n        </ul>\n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNDEzM2IxYjZmYjFlNTlkN2IxNjNjYWE0ZWVjNTBhZSIsInN1YiI6IjY0NzIxMzk2OWFlNjEzMDEyNTdiYzY1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tcNdIoje0HBWD-U1jl32B-4ZQW7MTvc6gqKuda04J_Q';\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: API_KEY\n    }\n  };\n  \n async function fetchTranding () {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?language=en-US`, options);\n    return response.data.results;\n}\n\nasync function fetchDetailInfo (movie_id) {\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}?language=en-US`, options);\n    return response;\n}\n\nasync function fetchCastInfo (movie_id) {\n  const response = await axios.get(`${BASE_URL}/movie/${movie_id}/credits?language=en-US`, options);\n  return response;\n}\n\nasync function fetchReviews (movie_id) {\n  const response = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?language=en-US`, options);\n  return response;\n}\n\nasync function fetchBySearch (value) {\n  const response = await axios.get(`${BASE_URL}/search/movie?query=${value}`, options);\n  return response;\n}\n\nconst api = {fetchTranding, fetchDetailInfo, fetchCastInfo, fetchReviews, fetchBySearch};\n\nexport default api;"],"names":["movieId","useParams","useState","castList","setCastList","useEffect","fetchCast","moviesAPI","response","data","cast","console","log","map","id","profile_path","original_name","character","src","alt","width","BASE_URL","options","method","headers","accept","Authorization","fetchTranding","axios","results","fetchDetailInfo","movie_id","fetchCastInfo","fetchReviews","fetchBySearch","value","api"],"sourceRoot":""}