{"version":3,"file":"static/js/134.d9649238.chunk.js","mappings":"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","sources":["moviesAPI.js","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNDEzM2IxYjZmYjFlNTlkN2IxNjNjYWE0ZWVjNTBhZSIsInN1YiI6IjY0NzIxMzk2OWFlNjEzMDEyNTdiYzY1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tcNdIoje0HBWD-U1jl32B-4ZQW7MTvc6gqKuda04J_Q';\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: API_KEY\n    }\n  };\n  \n async function fetchTranding () {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?language=en-US`, options);\n    return response.data.results;\n}\n\nasync function fetchDetailInfo (movie_id) {\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}?language=en-US`, options);\n    return response;\n}\n\nasync function fetchCastInfo (movie_id) {\n  const response = await axios.get(`${BASE_URL}/movie/${movie_id}/credits?language=en-US`, options);\n  return response;\n}\n\nasync function fetchReviews (movie_id) {\n  const response = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?language=en-US`, options);\n  return response;\n}\n\nasync function fetchBySearch (value) {\n  const response = await axios.get(`${BASE_URL}/search/movie?query=${value}`, options);\n  return response;\n}\n\nconst api = {fetchTranding, fetchDetailInfo, fetchCastInfo, fetchReviews, fetchBySearch};\n\nexport default api;","import { useSearchParams, useLocation, Link } from \"react-router-dom\";\nimport moviesAPI from '../moviesAPI';\nimport { useState, useEffect } from \"react\";\n\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? '';\n    const location = useLocation();\n    \n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const value = form.elements.query.value;\n        if (value === '') {\n            return setSearchParams({});\n        }\n        setSearchParams({ query: value });\n        form.reset();\n      };\n\n\n      useEffect(() => {\n        if (!query) return;\n\n        const fetchMovies = async () => {\n            try {\n            const response = await moviesAPI.fetchBySearch(query)\n            setMovies(response.data.results);\n            \n            } catch (error) {\n            console.log(error)\n            }\n        }\n        fetchMovies();\n    }, [query])\n\n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\" style={{marginLeft: \"8px\"}}>Search</button>\n      </form>\n\n      <ul style={{display: \"flex\", flexDirection: 'column', gap: \"10px\"}}>\n        {movies && query && movies.map(({id, title}) => \n        (<li key={id} style={{fontSize: '10px', color: 'black'}}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>{title}</Link>\n          </li>))}\n    </ul>\n        </>\n    )\n}\n\nexport default Movies;"],"names":["BASE_URL","options","method","headers","accept","Authorization","fetchTranding","axios","response","data","results","fetchDetailInfo","movie_id","fetchCastInfo","fetchReviews","fetchBySearch","value","api","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMovies","moviesAPI","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","reset","type","name","style","marginLeft","display","flexDirection","gap","map","id","title","fontSize","color","to","state","from"],"sourceRoot":""}