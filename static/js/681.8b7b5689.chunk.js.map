{"version":3,"file":"static/js/681.8b7b5689.chunk.js","mappings":"yNAmCA,UA/BgB,WACZ,IAAOA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,GAAKL,EAAL,CACA,IAAMM,EAAY,mCAAG,6GAEMC,EAAAA,EAAAA,aAAuBP,GAF7B,OAEXQ,EAFW,OAGjBJ,EAAeI,EAASC,KAAKC,SAHZ,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBN,GAToB,CAUvB,GAAE,CAACN,KAGA,8BACoB,IAAnBG,EAAQU,QACL,wBACCV,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,eAAgBC,EAAtB,EAAsBA,QAAtB,OAAoC,0BAC5CD,EAAeE,OAAQ,0BAAI,UAAQF,EAAeE,SACnD,yBAAG,cAAYD,OAFuCF,EAA7C,OAKX,uBAAG,6BAGhB,C,8DC/BKI,EAAW,+BAGXC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cANU,+NAUAC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC0BC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,sCAA2DC,GADrF,cACSZ,EADT,yBAEUA,EAASC,KAAKC,SAFxB,kEAKciB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFAC2BF,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BS,EAA/B,mBAA0DR,GADrF,cACUZ,EADV,yBAEWA,GAFX,kEAKeqB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BD,GAA9B,uFACyBF,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BS,EAA/B,2BAAkER,GAD3F,cACQZ,EADR,yBAESA,GAFT,kEAKeF,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BsB,GAA7B,uFACyBF,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BS,EAA/B,2BAAkER,GAD3F,cACQZ,EADR,yBAESA,GAFT,kEAKesB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,uFACyBL,EAAAA,EAAAA,IAAA,UAAaP,EAAb,+BAA4CY,GAASX,GAD9E,cACQZ,EADR,yBAESA,GAFT,kEAKA,IAAMwB,EAAM,CAACP,cAjCb,WAQgBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyBYE,gBAzB3B,SAKcA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAoB8BE,cApB7C,SAKeA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAe6CvB,aAf5D,SAKeA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAU2DwB,cAV1E,SAKeA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAOf,K","sources":["components/Reviews.jsx","moviesAPI.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport moviesAPI from '../moviesAPI';\nimport { useState, useEffect } from \"react\";\n\nconst Reviews = () => {\n    const {movieId} = useParams();\n    const [reviews, setCastReviews] = useState([])\n\n    useEffect(()=> {\n        if (!movieId) return;\n        const fetchReviews = async () => {\n            try {\n            const response = await moviesAPI.fetchReviews(movieId);\n            setCastReviews(response.data.results);\n            } catch (error) {\n            console.log(error)\n            }\n        }\n        fetchReviews();\n    }, [movieId])\n\n    return (\n        <>\n        {reviews.length !== 0? \n            <ul>\n            {reviews.map(({id, author_details, content}) => (<li key={id}>\n                {author_details.name && <h5>Autor: {author_details.name}</h5>}\n                <p>Character: {content}</p>\n            </li>))}\n            </ul> \n            : <p>There are no reviews...</p>}\n        </>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNDEzM2IxYjZmYjFlNTlkN2IxNjNjYWE0ZWVjNTBhZSIsInN1YiI6IjY0NzIxMzk2OWFlNjEzMDEyNTdiYzY1MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.tcNdIoje0HBWD-U1jl32B-4ZQW7MTvc6gqKuda04J_Q';\n\nconst options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: API_KEY\n    }\n  };\n  \n async function fetchTranding () {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?language=en-US`, options);\n    return response.data.results;\n}\n\nasync function fetchDetailInfo (movie_id) {\n    const response = await axios.get(`${BASE_URL}/movie/${movie_id}?language=en-US`, options);\n    return response;\n}\n\nasync function fetchCastInfo (movie_id) {\n  const response = await axios.get(`${BASE_URL}/movie/${movie_id}/credits?language=en-US`, options);\n  return response;\n}\n\nasync function fetchReviews (movie_id) {\n  const response = await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?language=en-US`, options);\n  return response;\n}\n\nasync function fetchBySearch (value) {\n  const response = await axios.get(`${BASE_URL}/search/movie?query=${value}`, options);\n  return response;\n}\n\nconst api = {fetchTranding, fetchDetailInfo, fetchCastInfo, fetchReviews, fetchBySearch};\n\nexport default api;"],"names":["movieId","useParams","useState","reviews","setCastReviews","useEffect","fetchReviews","moviesAPI","response","data","results","console","log","length","map","id","author_details","content","name","BASE_URL","options","method","headers","accept","Authorization","fetchTranding","axios","fetchDetailInfo","movie_id","fetchCastInfo","fetchBySearch","value","api"],"sourceRoot":""}